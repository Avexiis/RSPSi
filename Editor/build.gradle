buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:6.1.1'
    }
}

plugins {
    id 'java'
    id 'java-library'
    //id 'org.openjfx.javafxplugin'
    id 'application'
    //id 'idea'
    //id "org.javamodularity.moduleplugin"
    id "com.github.johnrengelman.shadow"
    //id "org.kordamp.gradle.jdeps"
    //id "org.beryx.jlink"
    //id 'org.beryx.runtime' version '1.2.0' apply false
}


def exportsArgs = [
        "--add-modules=ALL-MODULE-PATH",
        "--add-exports=javafx.graphics/com.sun.javafx.css=org.controlsfx.controls",
        "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix",
        "--add-exports=javafx.controls/com.sun.javafx.scene.control=com.jfoenix",
        "--add-exports=javafx.base/com.sun.javafx.binding=com.jfoenix",
        "--add-exports=javafx.graphics/com.sun.javafx.stage=com.jfoenix",
        "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix",
        "--add-exports=javafx.graphics/com.sun.javafx.tk=jogamp.fat",
        "--add-opens=javafx.graphics/com.sun.javafx.tk=jogamp.fat",
        "--add-opens=javafx.graphics/javafx.stage=jogamp.fat",
        "--add-opens=jdk.unsupported/org.joml.Random=org.joml",
        "--add-opens=jdk.unsupported/org.joml.Random=jogamp.fat"
]
/*jlink {
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	launcher{
		name = 'hello'
		jvmArgs = [
		        exportsArgs

		]
	}

	mergedModule {
		requires 'javafx.graphics';
		requires 'java.logging';
		requires 'javafx.swing';
		requires 'java.sql';
		requires 'jdk.jdi';
		requires 'java.xml';
		requires 'java.desktop';
		requires 'javafx.base';
		requires 'jdk.unsupported';
		requires 'java.management';
		requires 'java.naming';
		requires 'jdk.attach';
		requires 'java.compiler';
		requires 'java.instrument';
		provides 'com.fasterxml.jackson.core.JsonFactory' with 'com.fasterxml.jackson.core.JsonFactory';
		provides 'com.fasterxml.jackson.core.ObjectCodec' with 'com.fasterxml.jackson.databind.ObjectMapper';
	}

}*/

jar {
    archiveFileName = "Editor.jar"
    manifest {
        attributes(
                'Main-Class': 'com.rspsi.editor.LauncherWindow'

        )
    }
    //from configurations.get
    //collect { it.isDirectory() ? it : zipTree(it).matching{ exclude{it.path.contains('META-INF') } } }

}

sourceSets {
    main.output.resourcesDir = main.java.outputDir
}

application {
    mainClassName = 'com.rspsi.editor.LauncherWindow'
    executableDir = "run"
}


task myProguardTask(type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.conf'


    libraryjars project.configurations.compileClasspath


    if (JavaVersion.current().java9Compatible) {
        libraryjars(System.getProperty("java.home") + "/jmods")
    } else {
        libraryjars(System.getProperty("java.home") + "/lib/rt.jar")
        libraryjars(System.getProperty("java.home") + "/lib/ext/jfxrt.jar")
    }


    injars 'build/libs/Editor.jar'
    outjars 'build/libs/deploy/Editor.jar'
}


//jar.finalizedBy(myProguardTask)

dependencies {

    // https://mvnrepository.com/artifact/com.displee/rs-cache-library
    api group: 'com.displee', name: 'rs-cache-library', version: '6.8.1'
	// https://mvnrepository.com/artifact/com.displee/disio
    api group: 'com.displee', name: 'disio', version: '2.2'
// https://mvnrepository.com/artifact/cz.advel.jbullet/jbullet
    api group: 'cz.advel.jbullet', name: 'jbullet', version: '20101010-1'


}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

run {

    jvmArgs = [

            //exportsArgs

    ]

}
